[
  {
    "name": "Custom Webpack Builder",
    "description": "Extended @angular-devkit/build-angular:browser builder that allows to specify additional webpack configuration (on top of the existing under the hood) and index.html tranformations. The builder will run the same build as @angular-devkit/build-angular:browser does with extra parameters that are specified in the provided webpack configuration. It will also run transformation on index.html if specified.<br><h1>Builders</h1><br><ul><li>@angular-builders/custom-webpack:browser</li><li>@angular-builders/custom-webpack:server</li><li>@angular-builders/custom-webpack:karma</li><li>@angular-builders/custom-webpack:dev-serve</li></ul>",
    "repository": "https://github.com/just-jeb/angular-builders/tree/master/packages/custom-webpack"
  },
  {
    "name": "Jest Builder",
    "description": "<ul><li>Allows running ng test with Jest instead of Karma & Jasmine.</li><li>The builder comes to provide zero configuration setup for Jest while keeping the workspace clear of boilerplate code.</li></ul>",
    "repository": "https://github.com/just-jeb/angular-builders/blob/master/packages/jest"
  },
  {
    "name": "Ngx Build Plus",
    "description": "Extend the Angular CLI's default build behavior without ejecting:<br><ul><li>Extend the default behavior by providing a partial config that just contains your additional settings</li><li>Alternative: Extend the default behavior by providing a custom function</li><li>Optional: Build a single bundle (e. g. for Angular Elements)</li><li>Inherits from the default builder, hence you have the same options</li><li>Simple to use</li><li>No eject needed</li></ul>",
    "repository": "https://github.com/manfredsteyer/ngx-build-plus"
  },
  {
    "name": "ngx-gh(Deprecated)",
    "description": "Deploy your Angular app to GitHub pages directly from the Angular CLI!",
    "repository": "https://github.com/mgechev/ngx-gh"
  },
  {
    "name": "angular-cli-ghpages",
    "description": "Deploy your Angular app to GitHub pages directly from the Angular CLI!<br><ul><li>ng new your-angular-project --defaults</li><li>git remote add origin https://github.com/<username>/<repositoryname>.git</li><li>ng add angular-cli-ghpages</li><li>ng deploy</li></ul>",
    "repository": "https://github.com/angular-schule/angular-cli-ghpages"
  },
  {
    "name": "ng-deploy-azure",
    "description": "Deploy Angular apps to Azure using the Angular CLI",
    "repository": "https://github.com/Azure/ng-deploy-azure"
  },
  {
    "name": "@angular/fire:deploy",
    "description": "Deploy your application on Firebase Hosting<br><ul><li>ng add @angular/fire to your project</li><li>ng run [ANGULAR_PROJECT_NAME]:deploy to deploy</li></ul>",
    "repository": "https://github.com/angular/angularfire2/blob/master/docs/deploy/getting-started.md"
  },
  {
    "name": "Bazel Build",
    "description": "Bazel is an open-source build and test tool similar to Make, Maven, and Gradle. It uses a human-readable, high-level build language. Bazel supports projects in multiple languages and builds outputs for multiple platforms. Bazel supports large codebases across multiple repositories, and large numbers of users.",
    "repository": "https://github.com/bazelbuild/bazel"
  },
  {
    "name": "@nrwl/builders",
    "description": "<ul><li>This package is part of their Nx Modern tools.</li><li>You can add this package via npm i @nrwl/builders or yarn add -D @nrwl/builders.</li><li>Having Nx workspace is not compulsory as they seamlessly integrate with angular cli.</li></ul>",
    "repository": "https://github.com/nrwl/nx"
  },
  {
    "name": "@zeit/ng-deploy",
    "description": "Deploy your application on ZEIT Now<br><ul><li>yarn global add @angular/cli</li><li>ng add @zeit/ng-deploy</li><li>ng run hello-world:deploy</li></ul>",
    "repository": "https://github.com/zeit/ng-deploy-now"
  },
  {
    "name": "ng-builder-file-remover",
    "description": "Remove files and folders from your project. Useful for removing any assets you don't want in a production build.",
    "repository": "https://github.com/BojanKogoj/ng-builder-file-remover"
  },
  {
    "name": "@netlify-builder/deploy",
    "description": "Deploy your application on Netlify with Angular CLI<br><ul><li>ng add @netlify-build/deploy</li><li>ng deploy</li></ul>",
    "repository": "https://github.com/ngx-builders/netlify-builder"
  },
  {
    "name": "ng-builder-google-maps",
    "description": "Angular CLI builder that adds the Google Maps API into your Angular application.",
    "repository": "https://github.com/Developer-Plexscape/ng-builder-google-maps"
  },
  {
    "name": "ngx-aws-deploy",
    "description": "Deploy Angular apps to Amazon S3 using the Angular CLI",
    "repository": "https://github.com/Jefiozie/ngx-aws-deploy"
  },
  {
    "name": "ng-process-env",
    "description": "Retrieve values from System Environment (OS) variables and update relevant <code>environment.ts</code> file.<ul><li>Install: <code>ng add ng-process-env</code> or manually <code>ng g ng-process-env:process-env</code></li><li>Collect vars: <code> ng run my-app:collect-vars </code></li></ul>",
    "repository": "https://github.com/danduh/ng-process-env"
  },
  {
    "name": "ngx-electronify",
    "description": "Serve your Angular application in the desktop using Electron",
    "repository": "https://github.com/bampakoa/ngx-electronify"
  },
  {
    "name": "@ngx-env/builder",
    "description": "Easily inject environment variables into your Angular applications<br /><ol> <li> Add @ngx-env to your CLI project <br /><br /> <code>ng add @ngx-env/builder</code> <br /><br /> </li> <li> Define Environment Variables in <code></code>.env</code> <br /><br /> <code> NG_APP_ENABLE_ANALYTICS=false<br /> NG_APP_VERSION=$npm_package_version<br /> NG_APP_COMMIT=$GITHUB_SHA </code> <br /><br /> </li> <li> Use in TypeScript <br /><br /> <code> @Component({<br /> &nbsp;&nbsp;selector: \"app-footer\",<br /> })<br /> export class FooterComponent {<br /> &nbsp;&nbsp;version = process.env.NG_APP_VERSION;<br /> &nbsp;&nbsp;branch = process.env.NG_APP_BRANCH_NAME;<br /> &nbsp;&nbsp;commit = process.env.NG_APP_COMMIT;<br /> &nbsp;&nbsp;analyticsFlag = process.env.NG_APP_ENABLE_ANALYTICS;<br /> }<br /> </code> <br /> </li> <li> Run CLI commands <br /><br /> <code> npm start<br /> NG_APP_BRANCH_NAME=$GITHUB_HEAD_REF ng test<br /> NG_APP_BRANCH_NAME=`git branch --show-current` npm run build<br /> </code> </li> </ol>",
    "repository": "https://github.com/chihab/ngx-env"
  }
]
